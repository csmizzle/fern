version: '3.8'

services:
  # reverse proxy to limit API exposure
  nginx:
    container_name: nginx
    image: nginx:1.19-alpine
    ports:
      - "1337:80"
    volumes:
      - "./services/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./services/nginx/nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - flask
  # flask API - handles document submission and GraphQL interface
  flask:
    container_name: flask
    build: ./api
    expose:
      - "5000"
    volumes:
      - "./volumes/api/uploads:/app/uploads"
      - "./volumes/api/api.log:/app/api.log"
    depends_on:
      - tika
  # TIka is workhorse on all document parsing
  tika:
    container_name: tika
    image: apache/tika:2.2.0
    expose:
      - "9998"
    volumes:
      - "./services/tika/tika-config.xml:/tika-config.xml"
    command: "-c /tika-config.xml"
    restart: always
  # mongo client to create main & replicated sets
  mongoinitiator:
    container_name: mongoinitiator
    image: mongo:latest
    volumes:
      - "./services/mongo/rs-init.sh:/rs-init.sh"
    depends_on:
      - flask
    entrypoint: "/rs-init.sh"
  # mongo containers
  mongodb1:
    container_name: mongo
    image: mongo:latest
    expose:
      - "27017"
    volumes:
      - "./volumes/mongo/:/data/db"
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongodb2:
    container_name: mongodb2
    image: mongo:latest
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  # mongo - elastic sync
  monstache:
    container_name: monstache
    image: rwynn/monstache:latest
    working_dir: /monstache
    volumes:
      - "./services/monstache/monstache.toml:/monstache.toml"
    command: -f /monstache.toml
    expose:
      - "8080"
    depends_on:
      - mongodb2
      - elastic
    restart: on-failure
  elastic:
    container_name: elastic
    image: elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
    expose:
      - "9200"
    depends_on:
      - mongodb2